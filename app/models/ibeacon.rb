class Ibeacon < ApplicationRecord
    require 'matrix.rb'
    require 'nmatrix'
    require './lib/algorithm.rb'
    require './lib/rotate.rb'

    def classify_exercise(x,y,z)
        # RubyProf.start
        # p Algorithm.array_string_to_array("531.0,-31.0,-125.0,265.0,-281.0,375.0,250.0,-437.0,359.0,-171.0,-46.0,-156.0,-46.0,")
        
        x1 = [[70.0452713 ,   54.07986077,  -33.32316686,   63.17878823,
         46.54670265,  -45.78233192,   -3.24128257,   45.65622122,
         60.66460873,  -24.60374234,  -57.88349538,  -78.30679606,
        -87.3940084 ,   94.05519738,  -14.61556619,  -16.21281099,
         18.08217963,  -35.77309206,  -50.45489474, -165.35086098,
        -40.73175977,   -7.36977975,   67.89118974,  -96.0955103 ,
        -65.64274455,   70.0378785 ,  -22.05366754,  -32.49299634,
         44.25438236,   -0.30974903,  -25.38024707,  -84.91143367,
       -138.44130322,  -90.51879513,   35.42912161,   22.4958819 ,
         42.57251716,   62.65679485,  -24.48013562,   10.93024185,
         60.25978776,   73.70247655,  -10.81247977,   27.52194499,
         79.57385007,    3.47202404,   75.84373955,  -62.59923755,
         21.53646546,   24.01469099,   16.0020799 ,  -68.8881531 ,
         34.87871916,   55.44150257,   65.45732887,   27.28535626,
        -93.73654229,  -32.17398106,   63.54222685,   83.05483881,
         35.19163308,  108.51622603,  -11.53940705,   17.51051129,
         42.7627716 ,    6.58648052,   46.62707997,   10.14969623,
        136.46838569,  -41.94568494,  -71.73811244,  -35.1697715 ,
        -85.29598605,  -93.73654229, -101.56548538,   58.09322059,
        -44.69345703,   52.90935039,  115.71753907,   33.98404471,
        -26.97005308,  -44.36496386,  235.22575723,  -64.3401581 ,
        -37.09365982,   91.37392087,  -57.62779873,  -50.41894076,
       -179.72518676,   21.76570884,  -19.56380614,    1.13837406,
          2.7231807 ,  -61.51680559,  -28.35816234,  212.78058262,
        151.97015795,   -4.12537975,  -71.1380851 ,  -71.89432124,
       -189.25615895
]]
        y1 = [[574.81220987,   629.15998577,   -17.51547972,   153.29425553,
         966.95406248,   -37.80365156,   -14.8519274 ,  1095.2804602 ,
         778.66440734,  -182.41489436,   323.55690262,   -78.36366268,
        -357.0523583 ,   698.81231221,   463.70968428,  -153.23934303,
         953.16516993,    33.92708462,  -474.55205358,   233.94929786,
          -9.61944745,  -430.75440023,   475.75259776,  -147.2503046 ,
        -139.53481427,   844.91154228,  -104.11797544,  -389.87142049,
         707.46490297,   202.73859173,  -247.26527632,  -452.06771217,
        -332.22248931,  -143.12281035,  -155.8934333 ,   741.42493846,
        -326.3596852 ,   -45.36612539,  -295.03053691,  -459.58759598,
         520.2053144 ,  -491.99132749,   906.11387779,  -408.25259849,
         431.19038765,  -399.34088816,   326.56393829,  -384.62068134,
         147.11794485,  -730.19604148,   793.84059082,  -413.66435241,
         309.17905138,  -649.75046947,   554.9393687 ,  -229.53996046,
        -129.65001592,   521.26850894,  -185.41626667,   130.02789703,
        -211.62162962,  -205.12922083,   969.67312956,   192.99367193,
        -680.86419858,    76.74331567,   -30.95255463,  -139.58233075,
        -309.43957208,   324.5056598 ,    43.39655229,    82.98347539,
        -152.82514013,  -129.65001592,   -93.076999  ,  -344.11618498,
         256.95079405,  -683.14474934,  -463.60464634,  -363.41493624,
         683.94594199,    62.87582808,  -979.3871388 ,  -441.64000784,
         742.85287536,  -796.40745689,  -879.80949368,  -222.60821907,
         -74.97127313,    57.74432996,   163.25088379,   152.4842317 ,
        -176.58893754,  1028.53572364,  -459.88736153,  -461.48717718,
        -768.67810166,  -553.20425282,  -474.02660793,    18.8246751 ,
        -263.38816756
]]
        z1 = [[5.92546182e+01,   4.56008670e+01,  -1.60053097e+02,
        -9.93784981e+01,   5.92822406e+02,  -1.19529533e+02,
        -1.49470767e+02,   6.56795391e+02,   2.67452324e+02,
        -9.49519862e+01,  -3.39601941e+01,  -2.04347248e+02,
         3.37536418e+01,   1.47274491e+02,  -9.54669750e+01,
        -7.77653788e+01,   4.86701544e+02,  -1.17654272e+02,
         3.68166992e+00,  -1.29260994e+02,  -1.40980462e+02,
        -3.30530334e+01,   4.49524092e+01,  -1.36441488e+02,
        -1.76567543e+02,   3.20898175e+02,  -7.35256098e+01,
        -2.03091738e+01,   9.91807132e+01,  -1.67212584e+02,
         1.73192256e+01,   9.59703546e+01,   3.04900093e+01,
        -5.95918681e+01,  -8.17736954e+01,   2.91584673e+02,
         3.45673071e+01,   4.90318737e-01,  -1.15340752e+02,
        -7.78163670e+01,   1.00815793e+02,   3.31234579e+01,
         5.80681726e+02,   9.79631353e+01,   1.16700056e+02,
         2.19619332e+01,   1.53637739e+02,  -1.71914068e+02,
        -2.48079265e+01,  -4.68992776e+01,   5.32716234e+02,
         1.37520763e+02,   1.32339081e+02,  -1.43590647e+01,
         2.64780823e+02,   5.27151199e+00,  -5.38360091e+01,
         1.27440368e+02,  -4.86888563e+02,  -1.95381723e+02,
        -3.99701850e+02,  -3.73907419e+02,   7.57256620e+02,
         6.88307906e+01,  -3.96857673e+02,  -1.55103397e+02,
        -2.87176671e+02,  -2.98265955e+02,  -2.36604734e+02,
         2.98483916e+02,  -1.59925379e+02,  -2.73840399e+02,
        -1.17355066e+02,  -5.38360091e+01,  -1.82910104e+02,
        -2.40948236e+02,   3.71680841e+02,  -1.40879459e+02,
        -3.74679106e+02,  -1.67556780e+02,   6.82531327e+02,
         4.19595345e+02,  -1.61230737e+02,  -2.00996118e+02,
         7.44864992e+02,  -2.21712843e+02,  -1.09790603e+02,
        -3.41057801e+02,  -1.07410146e+02,   1.84517907e+02,
         6.05053563e+02,   3.16073462e+02,  -1.74099301e+02,
         1.40462163e+03,  -3.44046214e+02,  -6.51128526e+02,
        -4.97711355e+02,  -4.37826436e+02,  -4.54743820e+02,
        -3.89161498e+02,  -7.82513655e+01
]]

        # press1
        x2 = [[-126.88386763,   72.21787959,   92.42241876,   11.85390937,
         -2.13606661,   -2.11201514,   52.64545944,   26.64791196,
        -50.77153837,  -41.64879876,  -30.86613817,  -36.97028272,
        -68.76763628,  -27.97052295,    1.22663501,   89.88320512,
        -50.58751054,  -22.37816621, -106.54581135,  -58.79640946,
        -15.98637297, -176.00944285,   62.91633222,   74.79900297,
       -166.9393963 ,  -13.76456268,   49.46664571,  -98.49086089,
         46.15255237, -100.54713157,    7.86778734,   30.37931016,
        -35.45282301,  -85.91866859,  -62.72862448,  -24.10344068,
        -83.50401251,  -34.24455641,    6.85098893,  -93.62506231,
        -56.54270287, -103.79144347,   22.77740807,  -31.51361005,
         77.67455225,  -84.14592113,   91.01863407,  -51.70665894,
         88.34195848, -299.4548645 ,   40.21752686,   24.59595153,
         47.81350193,   13.20607028,   19.67371356,  -94.78682905,
          6.28798655,   96.84742493,  -13.46759067,  -96.3782617 ,
        176.57847274,   75.69027068,  144.90417768,   -0.67767105,
          9.49687965,  -54.63162435,  119.05001918,  -22.46152264,
        127.37888553, -114.13357618,   65.20387824,  -41.47555426,
          4.00673297, -152.33870414,   71.61945842,   -9.61836666,
         53.86414394,  157.82344824,   45.6274742 ,   60.05518638,
         29.4078431 ,  173.13358795,  -51.22941917,   30.23990673,
          8.31239999,  126.25759549,  -49.07162856,   91.48509052,
       -302.14567736,  136.46635103,   15.86076213, -211.57802874,
        238.14407704,  -63.44506997, -299.22550533,  203.07799471,
        223.69534951,  251.52015603,   11.65661339,   14.33885224,
       -145.81581694,  -56.06147756,   99.25379211,  128.39762708,
        -57.60155095,   34.71700133
]]
        y2 = [[9.29756804e+02,   4.47048967e+01,   2.09435881e+02,
         9.10196193e+01,   5.96850868e+01,   2.11292624e+01,
         3.96335905e+01,   4.80617304e+01,  -3.26645395e+01,
        -8.10199116e+01,   2.11542858e+00,  -6.36717558e+01,
         2.33391127e+01,   3.56793598e+01,   1.02703744e+02,
         1.29674405e+02,  -5.25063258e+01,   5.28446243e+01,
        -6.62370727e-01,  -4.33384505e+00,   7.18228942e+01,
        -8.43798031e+01,   7.41470107e+01,  -5.37219342e+01,
         2.04819003e+01,   8.63101149e+02,   6.66651463e+02,
         6.79555440e+02,   1.92353370e+02,  -2.92825015e+01,
        -1.52254286e+02,  -1.58475916e+02,  -1.93008884e+02,
        -1.54680704e+02,  -3.16800765e+02,  -5.77807824e+01,
        -6.05441806e+01,  -9.22503535e+01,  -1.01747789e+02,
        -6.39644118e+01,  -6.87430620e+01,  -1.43902219e+02,
        -1.13184011e+02,  -1.59583995e+02,  -5.12073429e+01,
        -1.58517329e+02,  -4.82407944e+01,  -1.47555049e+02,
        -7.92787840e-01,  -1.72183635e+02,   8.41236648e+02,
         6.42874994e+02,   6.82911088e+02,  -1.76565465e+02,
        -8.83503314e+01,  -4.19016677e+02,  -2.11488719e+02,
        -1.39003454e+02,  -2.15175498e+02,  -2.51535873e+02,
        -5.47887729e+02,  -2.29685086e+02,  -2.07741882e+02,
        -7.66020616e+02,  -1.29958086e+02,  -5.04649578e+02,
        -2.13489570e+02,  -5.49160484e+02,  -1.99931671e+02,
        -3.23757930e+02,  -3.76907710e+02,  -1.25832929e+02,
         6.88310185e+02,  -8.71231057e+00,  -9.81251184e+01,
        -1.69003157e+02,  -1.70347175e+02,  -5.67078381e+01,
        -2.59707027e+01,  -3.08712042e+02,  -3.14518425e+01,
        -7.13415921e+01,  -1.50479474e+02,  -2.13905252e+02,
         2.90877041e+01,  -1.04000787e+02,  -3.15174895e+02,
        -7.61364509e+01,   2.43651835e+02,   4.81126767e+02,
         6.75102491e+02,  -1.65284019e+02,   1.21308639e+02,
        -5.23191910e+01,  -1.15507845e+02,  -2.03454915e+02,
        -9.38356887e+00,  -9.73416104e+01,   1.74388461e+02,
         1.90666731e+02,   1.99448890e+02,  -1.41272651e+02,
         3.57127230e+01,   2.18603800e+02,   8.49830058e+02,
         6.46295226e+02
]]
        z2 = [[182.26179279,   101.47432438,    59.23122599,  -129.90445074,
         173.14080602,  -346.06478701,    71.95818942,    12.40070472,
         136.15246451,  -115.28049597,    -9.32649912,   -53.06190566,
        -131.49045319,    67.55053215,  -302.66596923,   141.8366697 ,
        -130.51449941,    18.61098535,   -94.18444452,     9.76032396,
          95.67570004,  -271.16804663,    85.23723293,  -163.03748398,
         196.46402821,   407.63048293,   186.96028764,   189.61803626,
        -406.4041327 ,   127.38022765,  -339.69700955,    36.19728765,
        -142.42971008,    19.96840883,  -543.23964129,   165.06590276,
        -141.9991322 ,   152.77743502,  -152.01094216,  -219.26404253,
         -82.57804062,   -88.20454613,   -58.6966238 ,  -175.72024015,
         -21.18401012,  -311.21452805,   -39.21551229,   -63.57058467,
          21.62462318,    80.00956498,   180.44360484,    81.23362065,
         202.60930437,   229.03620499,   650.29890189,  -377.03140155,
         121.45132474,   311.3114693 ,   202.94442156,   120.5202519 ,
        -501.76762258,  -107.91784314,   308.0592366 ,  -405.29325738,
         163.85956675,  -347.20581205,   342.99527206,  -649.27511503,
         -37.26360473,  -126.33542112,   -84.88450612,   155.21121077,
         239.40355309,   133.25391952,   201.7600595 ,   -36.83943621,
         -45.09561352,   535.90745367,   139.38091999,  -923.10633941,
          15.5589483 ,   392.20827877,  -299.72989526,  -512.52538294,
          78.23227258,     6.08392275,  -671.28979946,   261.78384779,
          78.1067656 ,   372.55564976,   190.98827847,   257.98163309,
         486.21107033,   123.53992024,  -394.98180569,   836.30106467,
         509.03169947,   667.77414203,   118.80943554,    55.14764526,
         -35.30872884,  -772.96650165, -1100.97159967,   101.56010087,
         192.87667832,   158.49853099
]]

        # row1
        x3 = [[-134.18186437,   23.36528431,   -2.77711371,  -18.63881152,
        176.87968696,   30.86263158,  134.99877917, -157.90013855,
        -58.74766102,  -40.82666602,  -63.91043225, -117.37999139,
        -48.19684308,  -78.3013147 ,   37.68106509, -102.43088653,
        -21.45860301,  -78.41136942,  163.69024389,  -99.90674043,
       -150.42683839, -113.02859914,  128.31593018,   75.90220126,
        -41.39640638,  -39.69043129,  109.87608228,  122.32907033,
         54.72901161,  100.40838703,   17.82366901,   11.92504413,
         36.1915161 ,   54.42776868,   20.9963377 ,    8.3130485 ,
         -8.68842979,   84.82196806,   46.66074289, -230.4282352 ,
       -181.35211224,   54.84217502, -194.43311873,  -38.66424066,
        188.9104714 ,  161.15607316,  117.03263939,  -65.23594099,
        144.24414546,  -44.93522795,  -85.45344751,   53.77482179,
        203.03698096,  -35.72231524,   -4.48825486,   -0.586222  ,
       -218.7167062 , -168.76752968, -247.62739903,  -53.0595474 ,
         99.17051189,  -53.63858341,  -64.13495816,  239.96785614,
          4.20330548, -193.26163625,  -27.08991433,  -59.14362842,
        158.21812209,   -8.33230937,  134.97206549, -321.92064082,
        134.82514857,   61.93220681,  178.47561796,  120.57824929,
        -75.72479059,  -25.2542714 , -136.88127676,  286.52824732,
        223.96895566,  450.51941252, -351.15457126, -194.24945567
]]
        y3 = [[-83.3231591 ,   17.26741621,  221.58022428,   91.73342388,
        185.12938893,   65.70138055,  218.46035634,   -1.62060373,
        113.43901602,   52.4101097 ,  330.3011984 ,   15.92306079,
        220.88222992,   98.70379589,  331.19131093,  141.15709461,
        254.39290693,  149.57976607,  370.01242165,  216.62115885,
        286.67281003, -143.50952779, -409.9070561 , -216.88734008,
        219.24019778, -100.70859196,   -7.06824897,   60.88339601,
        -37.36103615,   79.58469443, -103.85232333,  294.35256651,
       -165.67342121, -127.48626299,  176.89111194,  -43.82180081,
         35.0887187 ,  405.90974747,  -43.21767643, -568.0662772 ,
       -121.52806411, -350.45614007, -318.35428109, -463.23604401,
        -57.47819417,   22.58829375,   -6.47446749,  -44.39410434,
        -25.78195595,  185.21123601, -218.80432626,  -15.85129334,
        -10.74267366,  239.70158898, -101.39050502,  -69.30373854,
       -126.11034811, -153.58467524, -176.56056526, -377.91910586,
       -296.20420035,  369.34464107,  228.05712867,    4.37273184,
        -35.27343852,  466.41637649,   10.76408764,   28.58539013,
         98.60213635,   37.32453233,  145.583474  , -457.82729627,
       -229.71425143,  -83.23030756, -344.2281512 , -362.15200108,
       -243.90474038,  559.20225247,  425.32327367, -204.33668594,
        -93.429866  , -232.52681264,  -81.75512605, -119.12996044
]]
        z3 = [[-2.39445730e+02,  -3.80371100e+01,   2.22918540e+02,
         1.03295060e+00,   1.46304112e+02,  -9.21106479e+00,
         4.51571268e+02,  -1.58420203e+02,  -8.87398946e+00,
        -9.70403693e+01,   5.51459964e+02,  -3.52157493e+01,
         3.63081164e+02,  -3.79003209e+01,   5.07410272e+02,
        -7.01723086e+01,   4.02541283e+02,  -9.88972351e+01,
         3.42732987e+02,  -6.21222344e+01,  -9.83780735e+01,
         1.98750734e+02,  -2.75499385e+02,  -2.36697002e+01,
         5.61184818e+02,  -2.94791152e+02,   1.01353195e+02,
         2.49880961e+02,  -1.32772877e+01,   7.75912479e+01,
        -3.68972880e+01,   7.37596141e+02,  -1.25479307e+02,
        -6.55778875e+01,   6.34394793e+02,  -2.38527852e+02,
        -6.79697108e+01,   7.54917627e+02,  -1.98451808e+02,
        -5.89969958e+01,   6.41063678e+00,   9.51867299e+01,
        -3.08577185e+02,  -5.04950124e+02,   1.33234268e+02,
         1.76949836e+02,  -7.97474151e+01,  -3.91093309e+02,
        -8.82770591e+01,   3.96080286e+02,  -4.94230727e+02,
        -9.13888776e+01,  -1.28317320e+02,   3.02128577e+02,
        -2.91734722e+02,  -2.35616867e+02,   1.26547599e+02,
         6.45496386e+00,   3.95907047e+00,  -4.56879393e+02,
        -4.85051778e+02,   1.01017567e+03,   7.82180791e+02,
        -4.28384629e+01,  -5.59980859e+02,   1.05278414e+03,
        -6.81369823e+02,  -7.11302424e+02,  -1.22662020e+02,
        -4.47173975e+02,  -4.24861251e+02,   1.95517261e+02,
         2.80367465e+01,   2.33465745e+02,  -7.22080047e+02,
        -9.01737026e+02,  -9.24335740e+02,   1.39339286e+03,
         1.30479924e+03,  -6.84877799e+02,  -6.26688347e+02,
        -8.30167903e+02,   4.87926885e+01,  -1.20259473e+01
]]

        xx = [Algorithm.array_string_to_array(x)]
        yy = [Algorithm.array_string_to_array(y)]
        zz = [Algorithm.array_string_to_array(z)]

        choices = ["Curl","Shoulder Press","Row"]

        pol = 4
        pol2 = pol

        
       
        big_1 = x1.transpose
        big_1 = (big_1.transpose << y1[0]).transpose
        big_1 = (big_1.transpose << z1[0]).transpose

        big_2 = x2.transpose
        big_2 = (big_2.transpose << y2[0]).transpose
        big_2 = (big_2.transpose << z2[0]).transpose

        big_3 = x3.transpose
        big_3 = (big_3.transpose << y3[0]).transpose
        big_3 = (big_3.transpose << z3[0]).transpose

        big_4 = xx.transpose
        big_4 = (big_4.transpose << yy[0]).transpose
        big_4 = (big_4.transpose << zz[0]).transpose
        theta = Rotate.angle_guess_3d(big_4)
        datr3 = Rotate.rotate_3d(big_4, theta).transpose
        datr3[0] = datr3[0].collect{ |ele| ele - (datr3[0]).mean}
        # datr3[0] = datr3[0].collect{ |ele| ele / (datr3[0]).standard_deviation}
        datr3[1] = datr3[1].collect{ |ele| ele - (datr3[1]).mean}
        # datr3[1] = datr3[1].collect{ |ele| ele / (datr3[1]).standard_deviation}
        datr3[2] = datr3[2].collect{ |ele| ele - (datr3[2]).mean}
        # datr3[2] = datr3[2].collect{ |ele| ele / (datr3[2]).standard_deviation}
        datr3 = datr3.transpose
        theta = Rotate.angle_guess_2d(datr3)
        datr2 = Rotate.rotate_2d(datr3, theta).transpose
        if Rotate.slope(N[*datr2[1]],N[*datr3.transpose[2]]) < 0.0
          datr2[0] = datr2[0].collect{ |ele| ele *-1.0}
          datr2[1] = datr2[1].collect{ |ele| ele *-1.0}
        end
        big_4 = [datr2[0],datr2[1],datr3.transpose[2]].transpose


        func1 = Algorithm.polyfunc(big_1.transpose[1],big_1.transpose[2],pol)
        func2 = Algorithm.polyfunc(big_2.transpose[1],big_2.transpose[2],pol)
        func3 = Algorithm.polyfunc(big_3.transpose[1],big_3.transpose[2],pol)
        func4 = Algorithm.polyfunc(big_4.transpose[1],big_4.transpose[2],pol)
        func5 = Algorithm.polyfunc(big_1.transpose[1],big_1.transpose[0],pol)
        func6 = Algorithm.polyfunc(big_2.transpose[1],big_2.transpose[0],pol)
        func7 = Algorithm.polyfunc(big_3.transpose[1],big_3.transpose[0],pol)
        func8 = Algorithm.polyfunc(big_4.transpose[1],big_4.transpose[0],pol)

        big_1 = big_1.transpose
        big_1[0] = big_1[1].collect{ |e| func5.substitute(e)}
        big_1[2] = big_1[1].collect{ |e| func1.substitute(e)}
        big_1 = big_1.transpose

        big_2 = big_2.transpose
        big_2[0] = big_2[1].collect{ |e| func6.substitute(e)}
        big_2[2] = big_2[1].collect{ |e| func2.substitute(e)}
        big_2 = big_2.transpose

        big_3 = big_3.transpose
        big_3[0] = big_3[1].collect{ |e| func7.substitute(e)}
        big_3[2] = big_3[1].collect{ |e| func3.substitute(e)}
        big_3 = big_3.transpose

         
        big_4 = big_4.transpose
        big_4[0] = big_4[1].collect{ |e| func8.substitute(e)}
        big_4[2] = big_4[1].collect{ |e| func4.substitute(e)}
        big_4 = big_4.transpose

        
        # data = big_4.transpose[1..2].transpose + big_1.transpose[1..2].transpose + big_2.transpose[1..2].transpose + big_3.transpose[1..2].transpose
        data = big_4 + big_1 + big_2 + big_3
        data = Algorithm.feature_matrix(data.transpose).transpose
        logistic_guess = Algorithm.nonlinear_logistic_regression_tester(choices ,data,pol,pol2, [xx[0].length, x1[0].length, x2[0].length, x3[0].length])
        p "Exercise is a: " + choices[logistic_guess].to_s
        return choices[logistic_guess].to_s
        # result = RubyProf.stop
        # printer = RubyProf::CallStackPrinter.new(result)
        # File.open("tmp/profile_data2.html", 'w') { |file| printer.print(file) }
    end
end
